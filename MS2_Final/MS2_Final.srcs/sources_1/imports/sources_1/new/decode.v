`timescale 1ns / 1ps
module decode #(parameter n=32)(input [$clog2(n)-1:0] writeReg, input en  , output reg [n-1:0] e);

always @(*)
begin 
//Check regWrite and fill enable with correct 1
    if (en) 
    begin 
        case (writeReg)
            5'b00000: e = 32'd0;
            5'b00001: e = 32'd2;
            5'b00010: e = 32'd4;
            5'b00011: e = 32'd8;
            5'b00100: e = 16;
            5'b00101: e = 32;
            5'b00110: e = 64;
            5'b00111: e =128;
            5'b01000: e = 256;
            5'b01001: e = 512;
            5'b01010: e = 1024;
            5'b01011: e =2048;
            5'b01100: e = 4096;
            5'b01101: e =8192;
            5'b01110: e = 16384;
            5'b01111: e = 32768;
            5'b10000: e = 65536;
            5'b10001: e = 131072;
            5'b10010: e = 262144;
            5'b10011: e = 524288;
            5'b10100: e = 1048576;
            5'b10101: e = 2097152;
            5'b10110: e = 4194304;
            5'b10111: e = 8388608;
            5'b11000: e = 16777216;
            5'b11001: e = 33554432;
            5'b11010: e = 67108864;
            5'b11011: e = 134217728;
            5'b11100: e = 26843546;
            5'b11101: e = 326870912;
            5'b11110: e = 1073741824;
            5'b11111: e = 2147483648;
        endcase
    end
end 
endmodule